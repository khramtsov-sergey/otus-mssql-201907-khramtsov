/*
Deployment script for Iventory

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Iventory"
:setvar DefaultFilePrefix "Iventory"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Items_Statuses]...';


GO
ALTER TABLE [dbo].[Items] DROP CONSTRAINT [FK_Items_Statuses];


GO
PRINT N'Starting rebuilding table [dbo].[DeviceStatuses]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DeviceStatuses] (
    [StatusId]    TINYINT       NOT NULL,
    [Name]        VARCHAR (32)  NULL,
    [Description] VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([StatusId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DeviceStatuses])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DeviceStatuses] ([StatusId], [Name], [Description])
        SELECT   [StatusId],
                 [Name],
                 [Description]
        FROM     [dbo].[DeviceStatuses]
        ORDER BY [StatusId] ASC;
    END

DROP TABLE [dbo].[DeviceStatuses];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DeviceStatuses]', N'DeviceStatuses';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Items_Statuses]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Statuses] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[DeviceStatuses] ([StatusId]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT 1 FROM dbo.DeviceStatuses)
BEGIN
INSERT INTO dbo.DeviceStatuses([StatusId],[Name],[Description])
VALUES(1,'Not in use',''),(2,'In use',''),(3,'Decommissioned',''),(4,'In service','')
END

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Statuses];


GO
PRINT N'Update complete.';


GO
