/*
Deployment script for Iventory

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Iventory"
:setvar DefaultFilePrefix "Iventory"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] VARCHAR (128) NOT NULL,
    [LastName]  VARCHAR (128) NOT NULL,
    [Email]     VARCHAR (128) NOT NULL,
    [CompanyID] INT           NOT NULL,
    [ManagerID] INT           NULL,
    [OfficeID]  INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Office]...';


GO
CREATE TABLE [dbo].[Office] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [CompanyID] INT           NULL,
    [Address]   VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Warehouse]...';


GO
CREATE TABLE [dbo].[Warehouse] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Name]       VARCHAR (128) NULL,
    [OfficeID]   INT           NOT NULL,
    [EmployeeID] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Employee_Company]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Company] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employee_Office]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Office] FOREIGN KEY ([OfficeID]) REFERENCES [dbo].[Office] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employee_Manager]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Manager] FOREIGN KEY ([Id]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Office_Company]...';


GO
ALTER TABLE [dbo].[Office] WITH NOCHECK
    ADD CONSTRAINT [FK_Office_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Company] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Warehouse_Office]...';


GO
ALTER TABLE [dbo].[Warehouse] WITH NOCHECK
    ADD CONSTRAINT [FK_Warehouse_Office] FOREIGN KEY ([OfficeID]) REFERENCES [dbo].[Office] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Warehouse_Employee]...';


GO
ALTER TABLE [dbo].[Warehouse] WITH NOCHECK
    ADD CONSTRAINT [FK_Warehouse_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [FK_Employee_Company];

ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [FK_Employee_Office];

ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [FK_Employee_Manager];

ALTER TABLE [dbo].[Office] WITH CHECK CHECK CONSTRAINT [FK_Office_Company];

ALTER TABLE [dbo].[Warehouse] WITH CHECK CHECK CONSTRAINT [FK_Warehouse_Office];

ALTER TABLE [dbo].[Warehouse] WITH CHECK CHECK CONSTRAINT [FK_Warehouse_Employee];


GO
PRINT N'Update complete.';


GO
