/*
Deployment script for Iventory

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Iventory"
:setvar DefaultFilePrefix "Iventory"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column CompanyId in table [dbo].[Companies] is currently  INT IDENTITY (1, 1) NOT NULL but is being changed to  SMALLINT IDENTITY (1, 1) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Companies])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column CompanyID in table [dbo].[Contracts] is currently  INT NOT NULL but is being changed to  SMALLINT NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Contracts])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column TypeId in table [dbo].[DeviceTypes] is currently  INT IDENTITY (1, 1) NOT NULL but is being changed to  SMALLINT IDENTITY (1, 1) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[DeviceTypes])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column CompanyID in table [dbo].[Employees] is currently  INT NOT NULL but is being changed to  SMALLINT NOT NULL. Data loss could occur.

The type for column OfficeID in table [dbo].[Employees] is currently  INT NULL but is being changed to  SMALLINT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Employees])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column CompanyID in table [dbo].[Offices] is currently  INT NULL but is being changed to  SMALLINT NULL. Data loss could occur.

The type for column OfficeId in table [dbo].[Offices] is currently  INT IDENTITY (1, 1) NOT NULL but is being changed to  SMALLINT IDENTITY (1, 1) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Offices])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column OfficeID in table [dbo].[Warehouses] is currently  INT NOT NULL but is being changed to  SMALLINT NOT NULL. Data loss could occur.

The type for column WarehouseId in table [dbo].[Warehouses] is currently  INT IDENTITY (1, 1) NOT NULL but is being changed to  SMALLINT IDENTITY (1, 1) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Warehouses])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 82dd623b-3863-4a13-893e-e871984b0e2a is skipped, element [dbo].[HeaderDocuments].[DocumentId] (SqlSimpleColumn) will not be renamed to [HeaderDocumentId]';


GO
PRINT N'Rename refactoring operation with key 2f0a4b86-a122-402a-b1e7-3d0727d51c7e is skipped, element [dbo].[WarehouseItems] (SqlTable) will not be renamed to [Items]';


GO
PRINT N'Dropping [dbo].[FK_Contract_Company]...';


GO
ALTER TABLE [dbo].[Contracts] DROP CONSTRAINT [FK_Contract_Company];


GO
PRINT N'Dropping [dbo].[FK_Employee_Company]...';


GO
ALTER TABLE [dbo].[Employees] DROP CONSTRAINT [FK_Employee_Company];


GO
PRINT N'Dropping [dbo].[FK_Office_Company]...';


GO
ALTER TABLE [dbo].[Offices] DROP CONSTRAINT [FK_Office_Company];


GO
PRINT N'Dropping [dbo].[FK_Employee_Office]...';


GO
ALTER TABLE [dbo].[Employees] DROP CONSTRAINT [FK_Employee_Office];


GO
PRINT N'Dropping [dbo].[FK_Warehouse_Office]...';


GO
ALTER TABLE [dbo].[Warehouses] DROP CONSTRAINT [FK_Warehouse_Office];


GO
PRINT N'Dropping [dbo].[FK_Warehouse_Employee]...';


GO
ALTER TABLE [dbo].[Warehouses] DROP CONSTRAINT [FK_Warehouse_Employee];


GO
PRINT N'Starting rebuilding table [dbo].[Companies]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Companies] (
    [CompanyId] SMALLINT      IDENTITY (1, 1) NOT NULL,
    [Name]      VARCHAR (128) NOT NULL,
    PRIMARY KEY CLUSTERED ([CompanyId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Companies])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Companies] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Companies] ([CompanyId], [Name])
        SELECT   [CompanyId],
                 [Name]
        FROM     [dbo].[Companies]
        ORDER BY [CompanyId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Companies] OFF;
    END

DROP TABLE [dbo].[Companies];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Companies]', N'Companies';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Contracts]...';


GO
ALTER TABLE [dbo].[Contracts] ALTER COLUMN [CompanyID] SMALLINT NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[DeviceTypes]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DeviceTypes] (
    [TypeId] SMALLINT      IDENTITY (1, 1) NOT NULL,
    [Name]   VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([TypeId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DeviceTypes])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DeviceTypes] ON;
        INSERT INTO [dbo].[tmp_ms_xx_DeviceTypes] ([TypeId], [Name])
        SELECT   [TypeId],
                 [Name]
        FROM     [dbo].[DeviceTypes]
        ORDER BY [TypeId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DeviceTypes] OFF;
    END

DROP TABLE [dbo].[DeviceTypes];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DeviceTypes]', N'DeviceTypes';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Employees]...';


GO
ALTER TABLE [dbo].[Employees] ALTER COLUMN [CompanyID] SMALLINT NOT NULL;

ALTER TABLE [dbo].[Employees] ALTER COLUMN [OfficeID] SMALLINT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Offices]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Offices] (
    [OfficeId]  SMALLINT      IDENTITY (1, 1) NOT NULL,
    [CompanyID] SMALLINT      NULL,
    [Address]   VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([OfficeId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Offices])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Offices] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Offices] ([OfficeId], [CompanyID], [Address])
        SELECT   [OfficeId],
                 [CompanyID],
                 [Address]
        FROM     [dbo].[Offices]
        ORDER BY [OfficeId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Offices] OFF;
    END

DROP TABLE [dbo].[Offices];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Offices]', N'Offices';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Warehouses]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Warehouses] (
    [WarehouseId] SMALLINT      IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (128) NULL,
    [OfficeID]    SMALLINT      NOT NULL,
    [EmployeeID]  INT           NULL,
    PRIMARY KEY CLUSTERED ([WarehouseId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Warehouses])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Warehouses] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Warehouses] ([WarehouseId], [Name], [OfficeID], [EmployeeID])
        SELECT   [WarehouseId],
                 [Name],
                 [OfficeID],
                 [EmployeeID]
        FROM     [dbo].[Warehouses]
        ORDER BY [WarehouseId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Warehouses] OFF;
    END

DROP TABLE [dbo].[Warehouses];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Warehouses]', N'Warehouses';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DeviceStatuses]...';


GO
CREATE TABLE [dbo].[DeviceStatuses] (
    [StatusId]    TINYINT       IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (32)  NULL,
    [Description] VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([StatusId] ASC)
);


GO
PRINT N'Creating [dbo].[HeaderDocuments]...';


GO
CREATE TABLE [dbo].[HeaderDocuments] (
    [HeaderDocumentId] INT           IDENTITY (1, 1) NOT NULL,
    [CompanyID]        SMALLINT      NULL,
    [ContractID]       INT           NULL,
    [Date]             DATETIME2 (7) NULL,
    [WarehouseID]      SMALLINT      NULL,
    PRIMARY KEY CLUSTERED ([HeaderDocumentId] ASC)
);


GO
PRINT N'Creating [dbo].[Items]...';


GO
CREATE TABLE [dbo].[Items] (
    [ItemId]         INT                                                IDENTITY (1, 1) NOT NULL,
    [TypeID]         SMALLINT                                           NOT NULL,
    [EditedBy]       SMALLINT                                           NOT NULL,
    [HeaderID]       INT                                                NULL,
    [SerialNumber]   VARCHAR (32)                                       NULL,
    [WarehouseID]    SMALLINT                                           NULL,
    [PlaceID]        INT                                                NULL,
    [IventoryNumber] VARCHAR (16)                                       NULL,
    [ParentID]       INT                                                NULL,
    [StatusID]       TINYINT                                            NULL,
    [SysStartTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,
    [SysEndTime]     DATETIME2 (7) GENERATED ALWAYS AS ROW END HIDDEN   NOT NULL,
    PRIMARY KEY CLUSTERED ([ItemId] ASC),
    PERIOD FOR SYSTEM_TIME ([SysStartTime], [SysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[Items_History], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[Items].[IX_Items_TypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_TypeID]
    ON [dbo].[Items]([TypeID] ASC);


GO
PRINT N'Creating [dbo].[Items].[IX_Items_WarehouseID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_WarehouseID]
    ON [dbo].[Items]([WarehouseID] ASC);


GO
PRINT N'Creating [dbo].[Items].[IX_Items_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_StatusID]
    ON [dbo].[Items]([StatusID] ASC, [TypeID] ASC) WHERE StatusID = 0;


GO
PRINT N'Creating [dbo].[Places]...';


GO
CREATE TABLE [dbo].[Places] (
    [PlaceId]    INT      IDENTITY (1, 1) NOT NULL,
    [EmployeeID] INT      NULL,
    [OfficeID]   SMALLINT NULL,
    PRIMARY KEY CLUSTERED ([PlaceId] ASC)
);


GO
PRINT N'Creating [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [RoleId]      TINYINT       IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (128) NOT NULL,
    [Description] VARCHAR (512) NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [UserId]    SMALLINT      IDENTITY (1, 1) NOT NULL,
    [FirstName] VARCHAR (128) NOT NULL,
    [LastName]  VARCHAR (128) NOT NULL,
    [RoleID]    TINYINT       NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Contract_Company]...';


GO
ALTER TABLE [dbo].[Contracts] WITH NOCHECK
    ADD CONSTRAINT [FK_Contract_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Companies] ([CompanyId]);


GO
PRINT N'Creating [dbo].[FK_Employee_Company]...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Companies] ([CompanyId]);


GO
PRINT N'Creating [dbo].[FK_Office_Company]...';


GO
ALTER TABLE [dbo].[Offices] WITH NOCHECK
    ADD CONSTRAINT [FK_Office_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Companies] ([CompanyId]);


GO
PRINT N'Creating [dbo].[FK_Employee_Office]...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Office] FOREIGN KEY ([OfficeID]) REFERENCES [dbo].[Offices] ([OfficeId]);


GO
PRINT N'Creating [dbo].[FK_Warehouse_Office]...';


GO
ALTER TABLE [dbo].[Warehouses] WITH NOCHECK
    ADD CONSTRAINT [FK_Warehouse_Office] FOREIGN KEY ([OfficeID]) REFERENCES [dbo].[Offices] ([OfficeId]);


GO
PRINT N'Creating [dbo].[FK_Warehouse_Employee]...';


GO
ALTER TABLE [dbo].[Warehouses] WITH NOCHECK
    ADD CONSTRAINT [FK_Warehouse_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employees] ([EmployeeId]);


GO
PRINT N'Creating [dbo].[FK_HeaderDocuments_Company]...';


GO
ALTER TABLE [dbo].[HeaderDocuments] WITH NOCHECK
    ADD CONSTRAINT [FK_HeaderDocuments_Company] FOREIGN KEY ([CompanyID]) REFERENCES [dbo].[Companies] ([CompanyId]);


GO
PRINT N'Creating [dbo].[FK_HeaderDocuments_Contract]...';


GO
ALTER TABLE [dbo].[HeaderDocuments] WITH NOCHECK
    ADD CONSTRAINT [FK_HeaderDocuments_Contract] FOREIGN KEY ([ContractID]) REFERENCES [dbo].[Contracts] ([ContractId]);


GO
PRINT N'Creating [dbo].[FK_HeaderDocuments_Warehouse]...';


GO
ALTER TABLE [dbo].[HeaderDocuments] WITH NOCHECK
    ADD CONSTRAINT [FK_HeaderDocuments_Warehouse] FOREIGN KEY ([WarehouseID]) REFERENCES [dbo].[Warehouses] ([WarehouseId]);


GO
PRINT N'Creating [dbo].[FK_Items_Types]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Types] FOREIGN KEY ([TypeID]) REFERENCES [dbo].[DeviceTypes] ([TypeId]);


GO
PRINT N'Creating [dbo].[FK_Items_Users]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Users] FOREIGN KEY ([EditedBy]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Items_Headers]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Headers] FOREIGN KEY ([HeaderID]) REFERENCES [dbo].[HeaderDocuments] ([HeaderDocumentId]);


GO
PRINT N'Creating [dbo].[FK_Items_Warehouses]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Warehouses] FOREIGN KEY ([WarehouseID]) REFERENCES [dbo].[Warehouses] ([WarehouseId]);


GO
PRINT N'Creating [dbo].[FK_Items_Places]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Places] FOREIGN KEY ([PlaceID]) REFERENCES [dbo].[Places] ([PlaceId]);


GO
PRINT N'Creating [dbo].[FK_Items_Items]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Items] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Items] ([ItemId]);


GO
PRINT N'Creating [dbo].[FK_Items_Statuses]...';


GO
ALTER TABLE [dbo].[Items] WITH NOCHECK
    ADD CONSTRAINT [FK_Items_Statuses] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[DeviceStatuses] ([StatusId]);


GO
PRINT N'Creating [dbo].[FK_Places_Office]...';


GO
ALTER TABLE [dbo].[Places] WITH NOCHECK
    ADD CONSTRAINT [FK_Places_Office] FOREIGN KEY ([OfficeID]) REFERENCES [dbo].[Offices] ([OfficeId]);


GO
PRINT N'Creating [dbo].[FK_Users_RoleID]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Users_RoleID] FOREIGN KEY ([RoleID]) REFERENCES [dbo].[Roles] ([RoleId]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '82dd623b-3863-4a13-893e-e871984b0e2a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('82dd623b-3863-4a13-893e-e871984b0e2a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2f0a4b86-a122-402a-b1e7-3d0727d51c7e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2f0a4b86-a122-402a-b1e7-3d0727d51c7e')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT 1 FROM dbo.DeviceStatuses)
BEGIN
INSERT INTO dbo.DeviceStatuses
VALUES('Not in use'),('In use'),('Decommissioned'),('In service')
END

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Contracts] WITH CHECK CHECK CONSTRAINT [FK_Contract_Company];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employee_Company];

ALTER TABLE [dbo].[Offices] WITH CHECK CHECK CONSTRAINT [FK_Office_Company];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employee_Office];

ALTER TABLE [dbo].[Warehouses] WITH CHECK CHECK CONSTRAINT [FK_Warehouse_Office];

ALTER TABLE [dbo].[Warehouses] WITH CHECK CHECK CONSTRAINT [FK_Warehouse_Employee];

ALTER TABLE [dbo].[HeaderDocuments] WITH CHECK CHECK CONSTRAINT [FK_HeaderDocuments_Company];

ALTER TABLE [dbo].[HeaderDocuments] WITH CHECK CHECK CONSTRAINT [FK_HeaderDocuments_Contract];

ALTER TABLE [dbo].[HeaderDocuments] WITH CHECK CHECK CONSTRAINT [FK_HeaderDocuments_Warehouse];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Types];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Users];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Headers];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Warehouses];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Places];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Items];

ALTER TABLE [dbo].[Items] WITH CHECK CHECK CONSTRAINT [FK_Items_Statuses];

ALTER TABLE [dbo].[Places] WITH CHECK CHECK CONSTRAINT [FK_Places_Office];

ALTER TABLE [dbo].[Users] WITH CHECK CHECK CONSTRAINT [FK_Users_RoleID];


GO
PRINT N'Update complete.';


GO
